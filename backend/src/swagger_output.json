{
  "openapi": "3.0.0",
  "info": {
    "version": "v1.0.0",
    "title": "Haspaka Project",
    "description": "Simple project for inventory management, made with ExpressJs and Typescript, PostgreSQL with PG-node for DB"
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "dev environment"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "User based routes"
    },
    {
      "name": "Commands",
      "description": "Commands based routes, also substitutes as permissions for users"
    },
    {
      "name": "Units",
      "description": "All the divisions beneath the commands based routes"
    },
    {
      "name": "Items",
      "description": "All the items based routes"
    },
    {
      "name": "Ideal Inventory",
      "description": "All the Ideal Inventory(teken model) based routes"
    },
    {
      "name": "Needed Inventory",
      "description": "All the Needed Inventory(items that a unit needs) based routes"
    },
    {
      "name": "Future Supplied",
      "description": "All the Future Supplied(items that a unit will get in the future) based routes"
    }
  ],
  "paths": {
    "/commands/": {
      "get": {
        "tags": [
          "Commands"
        ],
        "summary": "Get all of the commands",
        "description": "Gets all of the commands and outputs them in array - Admins only",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "apiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Commands"
        ],
        "summary": "Create new command",
        "description": "Creates new command and outputs its data - Admins only",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addCommand"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Commands"
        ],
        "summary": "Delete existing command",
        "description": "Deletes existing commands and outputs their data,",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/deleteCommand"
              }
            }
          }
        }
      }
    },
    "/commands/{cid}": {
      "patch": {
        "tags": [
          "Commands"
        ],
        "summary": "Create new command",
        "description": "Creates new command and outputs its data - Admins only",
        "parameters": [
          {
            "name": "cid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/patchCommand"
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Login user",
        "description": "Logins a user and returns a JWT token with 1W validity",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/login"
              }
            }
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Register user",
        "description": "Creates new user without any permissions",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/register"
              }
            }
          }
        }
      }
    },
    "/users/checkToken": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users",
        "description": "Get all the users without passwords - Admins only",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/users/{uid}": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update user",
        "description": "Updates a user command - Admin only",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/patchUser"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user",
        "description": "Delete a user based on user",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/units/": {
      "get": {
        "tags": [
          "Units"
        ],
        "summary": "Get all units",
        "description": "Get array of all the units joined with their commands name - Admin only",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "apiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Units"
        ],
        "summary": "Add unit",
        "description": "Creates a unit - Admin only",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addUnit"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Units"
        ],
        "summary": "Delete unit",
        "description": "Deletes a unit, triggers a TRIGGER on the DB that deletes any row in any table that references this unit - Admins Only",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/deleteUnits"
              }
            }
          }
        }
      }
    },
    "/units/{uid}": {
      "patch": {
        "tags": [
          "Units"
        ],
        "summary": "Update units",
        "description": "Updates a unit",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/patchUnit"
              }
            }
          }
        }
      }
    },
    "/items/": {
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "Get all items",
        "description": "Get array of all the items - Admin only",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "apiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Items"
        ],
        "summary": "Add item",
        "description": "Creates an item - Admin only",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addItem"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Items"
        ],
        "summary": "Delete item",
        "description": "Deletes an item, triggers a TRIGGER on the DB that deletes any row in any table that references this item - Admins Only",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/deleteItems"
              }
            }
          }
        }
      }
    },
    "/items/{iid}": {
      "patch": {
        "tags": [
          "Items"
        ],
        "summary": "Update item",
        "description": "Updates an item - Admin Only",
        "parameters": [
          {
            "name": "iid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/patchItem"
              }
            }
          }
        }
      }
    },
    "/idealInventory/": {
      "get": {
        "tags": [
          "Ideal Inventory"
        ],
        "summary": "Get items by command",
        "description": "Get items by the user command, admins get all the items",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "apiKeyAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Ideal Inventory"
        ],
        "summary": "Update a record",
        "description": "Updates a ideal inventory record",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateValue"
              }
            }
          }
        }
      }
    },
    "/neededInventory/": {
      "get": {
        "tags": [
          "Needed Inventory"
        ],
        "summary": "Get items by command",
        "description": "Get items by the user command, admins get all the items",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "apiKeyAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Needed Inventory"
        ],
        "summary": "Update a record",
        "description": "Updates a needed inventory record",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateValue"
              }
            }
          }
        }
      }
    },
    "/futureSupplied/": {
      "get": {
        "tags": [
          "Future Supplied"
        ],
        "summary": "Get items by command",
        "description": "Get items by the user command, admins get all the items",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "apiKeyAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Future Supplied"
        ],
        "summary": "Update a record",
        "description": "Updates a future supplied record",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateValue"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "addCommand": {
        "type": "object",
        "properties": {
          "command_name": {
            "type": "string",
            "example": "command name"
          }
        }
      },
      "patchCommand": {
        "type": "object",
        "properties": {
          "command_name": {
            "type": "string",
            "example": "command name"
          }
        },
        "required": [
          "command_name"
        ]
      },
      "deleteCommand": {
        "type": "object",
        "properties": {
          "commands_ids": {
            "type": "array",
            "example": [
              1,
              2,
              3
            ],
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "commands_ids"
        ]
      },
      "login": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "user"
          },
          "password": {
            "type": "string",
            "example": "pass"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "register": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "user"
          },
          "password": {
            "type": "string",
            "example": "pass"
          },
          "name": {
            "type": "string",
            "example": "Or"
          }
        },
        "required": [
          "username",
          "password",
          "name"
        ]
      },
      "patchUser": {
        "type": "object",
        "properties": {
          "command_id": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "command_id"
        ]
      },
      "addUnit": {
        "type": "object",
        "properties": {
          "unit_name": {
            "type": "string",
            "example": "unit name"
          },
          "command_id": {
            "type": "number",
            "example": 1
          }
        }
      },
      "patchUnit": {
        "type": "object",
        "properties": {
          "unit_name": {
            "type": "string",
            "example": "unit name"
          },
          "command_id": {
            "type": "number",
            "example": 1
          }
        }
      },
      "deleteUnits": {
        "type": "object",
        "properties": {
          "units_ids": {
            "type": "array",
            "example": [
              1,
              2,
              3
            ],
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "units_ids"
        ]
      },
      "addItem": {
        "type": "object",
        "properties": {
          "item_name": {
            "type": "string",
            "example": "item name"
          },
          "item_type": {
            "type": "string",
            "example": "חורף"
          }
        }
      },
      "patchItem": {
        "type": "object",
        "properties": {
          "unit_name": {
            "type": "string",
            "example": "item name"
          },
          "item_type": {
            "type": "string",
            "example": "שהייה"
          }
        }
      },
      "deleteItems": {
        "type": "object",
        "properties": {
          "items_ids": {
            "type": "array",
            "example": [
              1,
              2,
              3
            ],
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "items_ids"
        ]
      },
      "updateValue": {
        "type": "object",
        "properties": {
          "item_id": {
            "type": "number",
            "example": 1
          },
          "unit_id": {
            "type": "number",
            "example": 1
          },
          "value": {
            "type": "number",
            "example": 123
          }
        },
        "required": [
          "item_id",
          "unit_id",
          "value"
        ]
      }
    }
  }
}